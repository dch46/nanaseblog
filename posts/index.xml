<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nanase Blog</title>
    <link>http://www.nishinonanase.xyz/posts/</link>
    <description>Recent content in Posts on Nanase Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 02 Jun 2020 19:29:51 +0800</lastBuildDate>
    
	<atom:link href="http://www.nishinonanase.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vue组件中高德地图展示</title>
      <link>http://www.nishinonanase.xyz/posts/vue%E7%BB%84%E4%BB%B6%E4%B8%AD%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E5%B1%95%E7%A4%BA/</link>
      <pubDate>Tue, 02 Jun 2020 19:29:51 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/vue%E7%BB%84%E4%BB%B6%E4%B8%AD%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E5%B1%95%E7%A4%BA/</guid>
      <description>vue-amap是一套基于Vue 2.0和高德地图的地图组件。 安装 npm install -S vue-amap 在main.js中引入 //引</description>
    </item>
    
    <item>
      <title>推荐算法</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/</link>
      <pubDate>Tue, 02 Jun 2020 19:15:01 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95/</guid>
      <description>什么是推荐算法，意义，使用场景 推荐算法是计算机专业中的一种算法，通过一些数学算法，推测出用户可能喜欢</description>
    </item>
    
    <item>
      <title>Webshell</title>
      <link>http://www.nishinonanase.xyz/posts/webshell/</link>
      <pubDate>Tue, 02 Jun 2020 19:05:38 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/webshell/</guid>
      <description>Webshell “web”的含义是显然需要服务器开放web服务，“shell”的含义是取得对服务器某种程度上操作权</description>
    </item>
    
    <item>
      <title>Websocket</title>
      <link>http://www.nishinonanase.xyz/posts/websocket/</link>
      <pubDate>Tue, 02 Jun 2020 18:54:11 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/websocket/</guid>
      <description>轮询：在前端通过写js实现。缺点：有延迟、服务器压力大。 就是客户端通过一定的时间间隔以频繁请求的方式</description>
    </item>
    
    <item>
      <title>全文检索</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/</link>
      <pubDate>Tue, 02 Jun 2020 18:33:09 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/</guid>
      <description>Haystack 1.什么是Haystack Haystack是django的开源全文搜索框架(全文检索不同于特定字段</description>
    </item>
    
    <item>
      <title>递归</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%80%92%E5%BD%92/</link>
      <pubDate>Tue, 02 Jun 2020 17:54:39 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%80%92%E5%BD%92/</guid>
      <description>什么是递归？ 在数学与见算计科学中，是指在函数的定义中使用函数自身的方法。 递归算法就是一种直接或者间接</description>
    </item>
    
    <item>
      <title>JWT认证机制</title>
      <link>http://www.nishinonanase.xyz/posts/JWT%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Sun, 26 Apr 2020 23:44:47 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/JWT%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6/</guid>
      <description>什么是JWT Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 751</description>
    </item>
    
    <item>
      <title>Hexo优化之使用GooglePrettify高亮代码</title>
      <link>http://www.nishinonanase.xyz/posts/Hexo%E4%BC%98%E5%8C%96%E4%B9%8B%E4%BD%BF%E7%94%A8GooglePrettify%E9%AB%98%E4%BA%AE%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 25 Apr 2020 12:22:45 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Hexo%E4%BC%98%E5%8C%96%E4%B9%8B%E4%BD%BF%E7%94%A8GooglePrettify%E9%AB%98%E4%BA%AE%E4%BB%A3%E7%A0%81/</guid>
      <description>虽然Hexo自带了代码高亮的功能，但是渲染生成后的代码是使用table，然后一大堆的tr、td标签。</description>
    </item>
    
    <item>
      <title>Golang之命令行教程</title>
      <link>http://www.nishinonanase.xyz/posts/Golang-Go%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Golang-Go%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%95%99%E7%A8%8B/</guid>
      <description>一. 命令行预览 Go命令行使用二级命令，格式go &amp;lt;command&amp;gt; [arguments] $ go help Go is a tool for managing Go source code. Usage: go &amp;lt;command&amp;gt; [arguments] The commands are: bug start a bug report build</description>
    </item>
    
    <item>
      <title>Docker容器详解</title>
      <link>http://www.nishinonanase.xyz/posts/Docker%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 20 Nov 2019 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Docker%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>Docker容器详解 Docker是基于Go语言开发的开源应用容器引擎，遵从Apache Licence 2.0协议，</description>
    </item>
    
    <item>
      <title>团队项目开发的问题和解决方案</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%9B%A2%E9%98%9F%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 02 Nov 2019 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%9B%A2%E9%98%9F%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>团队项目开发的问题和解决方案 个人开发和团队开发这两个词相信对大家来说并不陌生。所谓个人开发就是一个人</description>
    </item>
    
    <item>
      <title>Hugo搭建博客</title>
      <link>http://www.nishinonanase.xyz/posts/Hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Wed, 13 Mar 2019 23:23:34 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。对比Hexo，Hugo</description>
    </item>
    
    <item>
      <title>网络API接口设计</title>
      <link>http://www.nishinonanase.xyz/posts/%E7%BD%91%E7%BB%9CAPI%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 02 May 2018 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E7%BD%91%E7%BB%9CAPI%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1/</guid>
      <description>网络API接口设计 目前许多的Web应用和移动应用都使用了前后端分离的开发模式，前后端分离简单的说就是</description>
    </item>
    
    <item>
      <title>算法入门</title>
      <link>http://www.nishinonanase.xyz/posts/%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 12 Mar 2018 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8/</guid>
      <description>算法入门系列课程1 - 周而复始 算法概述 什么是算法？ 解决问题的正确方法和具体的实施步骤。 例子1：如何在两</description>
    </item>
    
    <item>
      <title>MySQL性能优化</title>
      <link>http://www.nishinonanase.xyz/posts/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 02 Jan 2018 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>MySQL性能优化 使用索引 索引的设计原则 创建索引的列并不一定是select操作中要查询的列，最适合做</description>
    </item>
    
    <item>
      <title>Django开发项目</title>
      <link>http://www.nishinonanase.xyz/posts/Django%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Thu, 14 Dec 2017 15:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Django%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE/</guid>
      <description>使用Django开发商业项目 说明：本文的部分插图来自于《Python项目开发实战》和《精通Djang</description>
    </item>
    
    <item>
      <title>常见反爬策略及应对方案</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%B8%B8%E8%A7%81%E5%8F%8D%E7%88%AC%E7%AD%96%E7%95%A5%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 26 Aug 2017 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%B8%B8%E8%A7%81%E5%8F%8D%E7%88%AC%E7%AD%96%E7%95%A5%E5%8F%8A%E5%BA%94%E5%AF%B9%E6%96%B9%E6%A1%88/</guid>
      <description>常见反爬策略及应对方案 构造合理的HTTP请求头。 Accept User-Agent - 三方库fake-useragent from fake_useragent import UserAgent ua =</description>
    </item>
    
    <item>
      <title>Scrapy入门</title>
      <link>http://www.nishinonanase.xyz/posts/Scrapy%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 25 Aug 2017 17:20:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Scrapy%E5%85%A5%E9%97%A8/</guid>
      <description>Scrapy爬虫框架入门 Scrapy概述 Scrapy是Python开发的一个非常流行的网络爬虫框架，</description>
    </item>
    
    <item>
      <title>解析动态内容</title>
      <link>http://www.nishinonanase.xyz/posts/%E8%A7%A3%E6%9E%90%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/</link>
      <pubDate>Mon, 21 Aug 2017 16:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E8%A7%A3%E6%9E%90%E5%8A%A8%E6%80%81%E5%86%85%E5%AE%B9/</guid>
      <description>解析动态内容 根据权威机构发布的全球互联网可访问性审计报告，全球约有四分之三的网站其内容或部分内容是通</description>
    </item>
    
    <item>
      <title>静态资源和Ajax请求</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%92%8CAjax%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Mon, 21 Aug 2017 13:03:27 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%92%8CAjax%E8%AF%B7%E6%B1%82/</guid>
      <description>静态资源和Ajax请求 基于前面两个章节讲解的知识，我们已经可以使用Django框架来完成Web应用的</description>
    </item>
    
    <item>
      <title>并发下载</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%B9%B6%E5%8F%91%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Fri, 18 Aug 2017 08:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%B9%B6%E5%8F%91%E4%B8%8B%E8%BD%BD/</guid>
      <description>并发下载 多线程和多进程回顾 threading.local类 使用线程时最不愿意遇到的情况就是多个线程竞</description>
    </item>
    
    <item>
      <title>存储数据</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Fri, 04 Aug 2017 15:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE/</guid>
      <description>存储数据 存储海量数据 数据持久化的首选方案应该是关系型数据库，关系型数据库的产品很多，包括：Oracl</description>
    </item>
    
    <item>
      <title>数据采集和解析</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E5%92%8C%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 02 Aug 2017 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E5%92%8C%E8%A7%A3%E6%9E%90/</guid>
      <description>数据采集和解析 通过上一个章节的讲解，我们已经了解到了开发一个爬虫需要做的工作以及一些常见的问题，下面</description>
    </item>
    
    <item>
      <title>网络爬虫</title>
      <link>http://www.nishinonanase.xyz/posts/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</link>
      <pubDate>Tue, 01 Aug 2017 13:22:01 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</guid>
      <description>网络爬虫的概念 网络爬虫（web crawler），以前经常称之为网络蜘蛛（spider），是按照一定的</description>
    </item>
    
    <item>
      <title>表单的应用</title>
      <link>http://www.nishinonanase.xyz/posts/%E8%A1%A8%E5%8D%95%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 12 Jul 2017 10:36:01 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E8%A1%A8%E5%8D%95%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>表单的应用 实现“用户注册”和“用户登录”的功能，并限制只有登录的用户才能为进行操作。Django框架</description>
    </item>
    
    <item>
      <title>分支结构</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 21 Jun 2017 12:34:12 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84/</guid>
      <description>分支结构 应用场景 迄今为止，我们写的Python代码都是一条一条语句顺序执行，这种代码结构通常称之为顺</description>
    </item>
    
    <item>
      <title>构造程序逻辑-经典例题</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/</link>
      <pubDate>Fri, 02 Jun 2017 10:48:13 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%9E%84%E9%80%A0%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91/</guid>
      <description>构造程序逻辑 对于编程语言的初学者来说，在学习了Python的核心语言元素（变量、类型、运算符、表达式</description>
    </item>
    
    <item>
      <title>循环结构</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 02 Jun 2017 10:36:01 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</guid>
      <description>循环结构 应用场景 我们在写程序的时候，一定会遇到需要重复执行某条或某些指令的场景。例如用程序控制机器人</description>
    </item>
    
    <item>
      <title>图形用户界面和游戏开发</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 01 Jun 2017 11:07:34 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%92%8C%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/</guid>
      <description>图形用户界面和游戏开发 基于tkinter模块的GUI GUI是图形用户界面的缩写，图形化的用户界面对使</description>
    </item>
    
    <item>
      <title>Python编程惯例</title>
      <link>http://www.nishinonanase.xyz/posts/Python%E7%BC%96%E7%A8%8B%E6%83%AF%E4%BE%8B/</link>
      <pubDate>Thu, 01 Jun 2017 10:18:12 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Python%E7%BC%96%E7%A8%8B%E6%83%AF%E4%BE%8B/</guid>
      <description>Python编程惯例 “惯例”这个词指的是“习惯的做法，常规的办法，一贯的做法”，与这个词对应的英文单</description>
    </item>
    
    <item>
      <title>项目部署上线指南</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 23 May 2017 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8A%E7%BA%BF%E6%8C%87%E5%8D%97/</guid>
      <description>项目部署上线指南 准备上线 上线前的检查工作。 python manage.py check --deploy 将DEBUG设置为False并配置ALLOWED_</description>
    </item>
    
    <item>
      <title>异步化</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%BC%82%E6%AD%A5%E5%8C%96/</link>
      <pubDate>Tue, 23 May 2017 13:18:23 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%BC%82%E6%AD%A5%E5%8C%96/</guid>
      <description>异步化 如果没有对RequestHandler中的get或post方法进行异步处理，这就意味着，一旦在</description>
    </item>
    
    <item>
      <title>中间件的使用</title>
      <link>http://www.nishinonanase.xyz/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 18 Mar 2017 13:08:50 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>中间件的应用 实现登录验证 我们在用户登录成功后通过session保留了用户信息，接下来我们可以应用做一</description>
    </item>
    
    <item>
      <title>前后端分离开发</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 01 Mar 2017 13:07:20 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E5%BC%80%E5%8F%91/</guid>
      <description>前后端分离开发入门 在传统的Web应用开发中，大多数的程序员会将浏览器作为前后端的分界线。将浏览器中为</description>
    </item>
    
    <item>
      <title>电商网站技术要点剖析</title>
      <link>http://www.nishinonanase.xyz/posts/%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9%E5%89%96%E6%9E%90/</link>
      <pubDate>Wed, 18 Jan 2017 13:24:15 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E7%94%B5%E5%95%86%E7%BD%91%E7%AB%99%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9%E5%89%96%E6%9E%90/</guid>
      <description>电商网站技术要点剖析 商业模式 B2B - 商家对商家，交易双方都是企业（商家），最典型的案例就是阿里巴巴。 C2C -</description>
    </item>
    
    <item>
      <title>建造者模式</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sun, 24 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>意图Intent Builder Pattern: Separate the construction of a complex object form its representation so that the same construction process can create different representations 造者模式:将一个复杂对象的构建与它的表示</description>
    </item>
    
    <item>
      <title>原型模式</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>意图Intent Prototype Pattern：Specify the kinds of objects to create using a prototypical instance,and create new objects by copying this prototype. 原型模式:用原型实</description>
    </item>
    
    <item>
      <title>抽象工厂</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</link>
      <pubDate>Wed, 20 Jul 2016 13:30:25 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82/</guid>
      <description>意图Intent Abstract Factory Pattern:Provide an interface for creating families of related or dependent objects without specifying their concrete classes. 抽象工厂模式：提供一个创建一系列相关或相互依赖对</description>
    </item>
    
    <item>
      <title>Python语言进阶</title>
      <link>http://www.nishinonanase.xyz/posts/Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Thu, 14 Jul 2016 11:20:54 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Python%E8%AF%AD%E8%A8%80%E8%BF%9B%E9%98%B6/</guid>
      <description>重要知识点 生成式（推导式）的用法 prices = { &amp;#39;AAPL&amp;#39;: 191.88, &amp;#39;GOOG&amp;#39;: 1186.96, &amp;#39;IBM&amp;#39;: 149.24, &amp;#39;ORCL&amp;#39;: 48.44, &amp;#39;ACN&amp;#39;: 166.89, &amp;#39;FB&amp;#39;: 208.09, &amp;#39;SYMC&amp;#39;: 21.29 } # 用股票价格大于100元的股票构</description>
    </item>
    
    <item>
      <title>Redis持久化</title>
      <link>http://www.nishinonanase.xyz/posts/Redis%E6%8C%81%E4%B9%85%E5%8C%96/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/Redis%E6%8C%81%E4%B9%85%E5%8C%96/</guid>
      <description>RDB持久化 RDB持久化是把当前进程数据生成快照保存到硬盘的过程，触发RDB持久化过程分为手动触发和</description>
    </item>
    
    <item>
      <title>工厂方法模式</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</guid>
      <description>意图Intent Factory Pattern:Define an interface for creating an object,but let subclass decide which class to instantiate.Factory Method lets a class defer instantiation to subclass. 工厂方法模式：定义一个用于创建对象的接</description>
    </item>
    
    <item>
      <title>简单工厂</title>
      <link>http://www.nishinonanase.xyz/posts/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82/</guid>
      <description>意图Intent Simple Factory Pattern：Creates objects without exposing the instantiation logic to the client. Refers to the newly created object through a common interfa</description>
    </item>
    
    <item>
      <title>单例模式</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>意图Intent Singleton Pattern：Ensure a class has only one instance, and provide a global point of access to it. 单例模式：确保某一个类只</description>
    </item>
    
    <item>
      <title>Web快速上手</title>
      <link>http://www.nishinonanase.xyz/posts/web%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</link>
      <pubDate>Wed, 01 Jun 2016 11:25:07 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/web%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</guid>
      <description>快速上手 Web开发的早期阶段，开发者需要手动编写每个页面，例如一个新闻门户网站，每天都要修改它的HT</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 01 Jun 2016 11:11:01 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>使用正则表达式 正则表达式相关知识 在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串</description>
    </item>
    
    <item>
      <title>文件和异常</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Wed, 01 Jun 2016 11:08:58 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%96%87%E4%BB%B6%E5%92%8C%E5%BC%82%E5%B8%B8/</guid>
      <description>文件和异常 实际开发中常常会遇到对数据进行持久化操作的场景，而实现数据持久化最直接简单的方式就是将数据</description>
    </item>
    
    <item>
      <title>语言元素</title>
      <link>http://www.nishinonanase.xyz/posts/%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/</link>
      <pubDate>Wed, 01 Jun 2016 10:33:09 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E8%AF%AD%E8%A8%80%E5%85%83%E7%B4%A0/</guid>
      <description>语言元素 指令和程序 计算机的硬件系统通常由五大部件构成，包括：运算器、控制器、存储器、输入设备和输出设</description>
    </item>
    
    <item>
      <title>适配器模式</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 25 Apr 2016 18:25:35 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>意图Intent Adapter Pattern:Convert the inface of a class into another interface clients expect.Adapter lets classes work together that couldn’t otherwise because of incompatible interface. 适配器模式:将一个类的接</description>
    </item>
    
    <item>
      <title>报表与日志</title>
      <link>http://www.nishinonanase.xyz/posts/%E6%8A%A5%E8%A1%A8%E4%B8%8E%E6%97%A5%E5%BF%97/</link>
      <pubDate>Sat, 23 Apr 2016 13:06:10 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E6%8A%A5%E8%A1%A8%E4%B8%8E%E6%97%A5%E5%BF%97/</guid>
      <description></description>
    </item>
    
    <item>
      <title>面向对象进阶</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Wed, 10 Jun 2015 10:58:48 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%9B%E9%98%B6/</guid>
      <description>面向对象进阶 了解了面向对象的入门知识，知道了如何定义类，如何创建对象以及如何给对象发消息。为了能够更</description>
    </item>
    
    <item>
      <title>面向对象编程基础</title>
      <link>http://www.nishinonanase.xyz/posts/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 10 Jun 2015 10:55:44 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</guid>
      <description>面向对象编程基础 活在当下的程序员应该都听过&amp;quot;面向对象编程&amp;quot;一词，也经常有人问能不</description>
    </item>
    
    <item>
      <title>进程和线程</title>
      <link>http://www.nishinonanase.xyz/posts/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jun 2015 11:13:09 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</guid>
      <description>进程和线程 今天我们使用的计算机早已进入多CPU或多核时代，而我们使用的操作系统都是支持“多任务”的操</description>
    </item>
    
    <item>
      <title>为什么选择Python</title>
      <link>http://www.nishinonanase.xyz/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9Python/</link>
      <pubDate>Mon, 01 Jun 2015 09:25:23 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9Python/</guid>
      <description>我为什么选择了Python 目前，Python语言的发展势头在国内国外都是不可阻挡的，Python凭借</description>
    </item>
    
    <item>
      <title>初识Python</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%88%9D%E8%AF%86Python/</link>
      <pubDate>Mon, 01 Jun 2015 08:11:42 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%88%9D%E8%AF%86Python/</guid>
      <description>初识Python Python简介 Python的历史 1989年圣诞节：Guido von Rossum开始写P</description>
    </item>
    
    <item>
      <title>字符串和常用数据结构</title>
      <link>http://www.nishinonanase.xyz/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 05 May 2015 10:50:28 +0800</pubDate>
      
      <guid>http://www.nishinonanase.xyz/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>字符串和常用数据结构 使用字符串 第二次世界大战促使了现代电子计算机的诞生，最初计算机被应用于导弹弹道的</description>
    </item>
    
  </channel>
</rss>